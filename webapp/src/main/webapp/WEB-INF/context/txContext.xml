<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:jee="http://www.springframework.org/schema/jee"
   xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd" >
     
   <bean id="transactionManager"
    	class="org.springframework.orm.jpa.JpaTransactionManager" >   
    	<property name="entityManagerFactory" ref="entityManagerFactory" />  
   </bean>    
   
   <aop:aspectj-autoproxy proxy-target-class="true"/>
   
   	<jee:jndi-lookup id="DSGS" jndi-name="jboss/jdbc/DSGS"></jee:jndi-lookup> 
   
   
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" >
       <property name="persistenceUnits">
           <map>
               <!--
               add PersistenceUnit:
                    persistence.xml anpassen
                    web.xml persistence-unit-ref hinzufÃ¼gen.
                    fertig
               -->
               <entry key="MD" value="persistence/MD"/>               
           </map>
       </property>
       <property name="defaultPersistenceUnitName" value="MD"/>
    </bean>
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >
      <property name="dataSource" ref="DSGS"/>
      <property name="persistenceUnitName" value="MD" />   
	  <property name="jpaProperties">
          <props>
            <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</prop>
            <prop key="hibernate.transaction.manager_lookup_class">org.hibernate.transaction.SunONETransactionManagerLookup</prop>
            <prop key="hibernate.connection.release_mode">after_transaction</prop>
          </props>
      </property>    
    </bean>
    
    <bean id="entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean" >
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
   
    <bean id="customEntityManagerFactory" class="com.core.app.bd.CustomEntityManagerFactory" scope="singleton">
      		<property name="entityManagerFactory" ref="entityManagerFactory"  />
    </bean> 	
	
	 
	<bean id="conexion" class="com.core.app.bd.ConexionJDBC"  > 
		<property name="dataSource" ref="DSGS"/>	
		<aop:scoped-proxy/> 
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="DSGS" />
  		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
  		<property name="mapperLocations" value="classpath*:mybatis/mapper/*.xml"/>  
	</bean>
	
	
	<bean id="crearEntidad" class="com.core.app.servicios.crud.impl.CrearEntidadImpl">
	    <property name="entityManager" ref="entityManager" />
	</bean>
	
	<bean id="actualizarEntidad" class="com.core.app.servicios.crud.impl.ActualizarEntidadImpl">
		<property name="entityManager" ref="entityManager" />
	</bean>
	
	<bean id="eliminarEntidad" class="com.core.app.servicios.crud.impl.EliminarEntidadImpl">
	   	<property name="entityManager" ref="entityManager" />
	</bean>
	
	<bean id="obtenerEntidad" class="com.core.app.servicios.crud.impl.ObtenerEntidadImpl">
	    <property name="entityManager" ref="entityManager" />
	</bean>
	
	<bean id="obtenerEntidadesPorCriterio" class="com.core.app.servicios.crud.impl.ObtenerEntidadesPorCriterioImpl" >
	     <property name="entityManagerFactory" ref="customEntityManagerFactory" />
	</bean>
	 
                
    <!--  <tx:jta-transaction-manager/> -->    
    <!--  Definimos un consejo para la transaccion, para ello usamos el prefijo TX -->
   
   
   <tx:advice id="txTransaccional" transaction-manager="transactionManager"  >
       <tx:attributes>
         <tx:method name="ejecutar*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Throwable"/>         
       	 
       </tx:attributes>
   </tx:advice>
   
   <tx:advice id="txSoloLectura" transaction-manager="transactionManager">
       <tx:attributes>
          <tx:method  name="ejecutar*" read-only="true" isolation="REPEATABLE_READ"/>
       </tx:attributes>
   </tx:advice>
   
   <tx:advice id="txDependiente" transaction-manager="transactionManager">
       <tx:attributes>
          <tx:method name="ejecutar*" propagation="MANDATORY"/>
       </tx:attributes>
   </tx:advice>
   
   <tx:advice id="txCRUD" transaction-manager="transactionManager">
       <tx:attributes>
          <tx:method name="ejecutar*" propagation="REQUIRED" rollback-for="Throwable"/>
       </tx:attributes>
   </tx:advice>
   
   <tx:advice id="txIndependiente" transaction-manager="transactionManager">
       <tx:attributes>
          <tx:method name="ejecutar*" propagation="REQUIRES_NEW"/>
       </tx:attributes>
   </tx:advice>
    
   <aop:config> 
     <aop:pointcut  id="serviciosDatos" expression="execution (* com.servicios.datos.app.*.impl.*.*(..))
     				and !execution(* com.servicios.datos.app.*.impl.Obtener*.*(..)) 
     				and !execution(* com.servicios.datos.app.*.impl.Consultar*.*(..))
     				and !execution(* com.servicios.datos.app.*.impl.Invocar*.*(..))" />
     <aop:pointcut id="serviciosSoloLectura" expression="execution(* com.servicios.datos.app.*.impl.Obtener*.*(..)) 
     				and execution(* com.servicios.datos.app.*.impl.Consultar*.*(..))
      				and execution(* com.servicios.datos.app.*.impl.Invocar*.*(..))" />
     <aop:pointcut id="serviciosTransaccional" expression="execution(* com.servicios.negocio.app.*.*.*.*(..))" />
     <aop:pointcut id="serviciosCRUD" expression="execution(* com.core.app.servicios.crud.impl.*.*(..)) and
     											 !execution(* com.core.app.servicios.crud.impl.Obtener*.*(..))" />
     <aop:pointcut id="serviciosIndependientes" expression="execution(* com.core.app.servicios.crud.impl.Obtener*.*(..))" />
     <aop:advisor advice-ref="txCRUD" pointcut-ref="serviciosDatos"/>
     <aop:advisor advice-ref="txSoloLectura" pointcut-ref="serviciosSoloLectura"/>
     <aop:advisor advice-ref="txTransaccional" pointcut-ref="serviciosTransaccional"/>     
     <aop:advisor advice-ref="txCRUD" pointcut-ref="serviciosCRUD" />
     <aop:advisor advice-ref="txIndependiente" pointcut-ref="serviciosIndependientes" />
    
   </aop:config>
   	
   
 </beans>